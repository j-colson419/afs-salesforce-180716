{ 
    "Quiz": [
        { 
            "Question": "What metadata changes can be made directly in a production environment without deploying from sandbox? Choose 2 answers",
            "Options": { 
                "A": "Apex triggers",
                "B": "Visualforce pages",
                "C": "Validation rules",
                "D": "Apex classes"
            },
            "Answers": ["B", "C"],
            "Reorder": true
        },
        { 
            "Question": "What is the capability of sandbox templates? Choose 2 answers",
            "Options": { 
                "A": "Create a Partial Copy sandbox from a Partial Copy sandboxes environment.",
                "B": "Specify the object whose data should be replicated in a Partial Copy sandbox environment.",
                "C": "Specify the data range for data being replicated in a Partial Copy sandbox environment.",
                "D": "Save a template for re-use when creating a Partial Copy sandbox environment."
            },
            "Answers": ["B", "D"],
            "Reorder": true 
        },
        { 
            "Question": "When should Unmanaged packages be created? Choose 2 answers",
            "Options": { 
                "A": "Deploying from a Developer Edition environment.",
                "B": "Publishing an application for sale on the AppExchange.",
                "C": "Migrating of components from sandbox to production.",
                "D": "Distributing open-source projects on AppExchange."
            },
            "Answers": ["A", "D"],
            "Reorder": true 
        },
        { 
            "Question": "To Synchronize Accounts, orders and shipments in real time, a developer has built a custom interface between an external system and salesforce, prior to deployment, the developer needs to confirm that the interface can sustain the syncing of thousands of records at a time. Which sandbox environment is recommended to complete performance and load testing?",
            "Options": { 
                "A": "Partial Sandbox",
                "B": "Developer Sandbox",
                "C": "Developer Pro Sandbox",
                "D": "Full Sandbox"
            },
            "Answers": ["D"],
            "Reorder": true 
        },
        { 
            "Question": "What is recommended to refresh a full sandbox?",
            "Options": { 
                "A": "After UAT sign-off.",
                "B": "Whenever a new production used is added.",
                "C": "After a major production release.",
                "D": "Within 3 hours of when it is needed."
            },
            "Answers": ["C"],
            "Reorder": true 
        },
        { 
            "Question": "Universal Container installs an unmanaged package. Which of the following are true: (choose 2):",
            "Options": { 
                "A": "Components of unmanaged packages can be edited",
                "B": "Unmanaged packages can be upgraded",
                "C": "Unmanaged packages have a namespace prefix",
                "D": "Unmanaged packages donâ€™t have a version number",
            "E": "Test are executed during deployment"
        },
            "Answers": ["A", "E"],
            "Reorder": true
        },
        { 
            "Question": "When is it advisable to use a Full sandbox?",
            "Options": { 
                "A": "For training users to on new features",
                "B": "Staging before final deployment",
                "C": "Performance and load testing",
                "D": "All of the above"
            },
            "Answers": ["D"],
            "Reorder": true 
        },
        { 
            "Question": "What are some of the features and advantages of sandbox templates?",
            "Options": { 
                "A": "Using sandbox templates increases the amount of data copied.",
                "B": "Sandbox templates are used to import external data.",
                "C": "Sandbox templates are available in all editions.",
                "D": "Sandbox templates allow you to decide which objects to include in sandbox. By limiting the amount of data copied, the sandbox copy process can be faster."
            },
            "Answers": ["D"],
            "Reorder": true
        },
        { 
            "Question": "You have a team of developers who don't need access to production but just need access to sandbox for developing apps. How do you manage their accounts?",
            "Options": { 
                "A": "Create developer users as inactive users in production, then activate those users in sandbox.",
                "B": "If developers are also production users, you still need to create their accounts in sandbox.",
                "C": "De-activate developer users in sandbox.",
                "D": "Import users from a .csv file."
            },
            "Answers": ["A"],
            "Reorder": true 
        },
        { 
            "Question": "Before you can deploy to production, you should:",
            "Options": { 
                "A": "Use profiles to lock users out of the system",
                "B": "Test your changes first in a test sandbox environment.",
                "C": "Give training documents and release notes to end users",
                "D": "All of the above"
            },
            "Answers": ["D"],
            "Reorder": true 
        },
        { 
            "Question": "Which of the following are good ways to track changes in production?",
            "Options": { 
                "A": "Diff the metadata",
                "B": "Use a change log request form",
                "C": "Check the setup audit trail every week",
                "D": "All of the above"
            },
            "Answers": ["D"],
            "Reorder": true 
        },
        { 
            "Question": "Ideally, who should be in charge of logging all changes in production?",
            "Options": { 
                "A": "Product manager",
                "B": "Administrator",
                "C": "QA Engineer",
                "D": "Developer"
            },
            "Answers": ["B"],
            "Reorder": true 
        },
        { 
            "Question": "A metadata type is:",
            "Options": { 
                "A": "A data type.",
                "B": "A representation of configurations and customizations in Salesforce and is in XML format.",
                "C": "A representation of custom objects only.",
                "D": "JSON representation of settings."
            },
            "Answers": ["B"],
            "Reorder": true 
        },
        { 
            "Question": "What is a good way to track changes to customizations and settings that aren't represented as metadata types?",
            "Options": { 
                "A": "Hire an intern to track the changes.",
                "B": "Use the SOAP API",
                "C": "A change request form and the setup audit trail.",
                "D": "Have everyone write the changes on a whiteboard using different colored markers so you know who did what."
            },
            "Answers": ["C"],
            "Reorder": true 
        },
        { 
            "Question": "Choose the best answer based on the following scenario: Salesforce has been upgraded on sandbox instances but not yet on production instances, so your sandbox is now running a newer version than your production org. You have changes you want to deploy from sandbox to production. The changes on the sandbox instance don't depend on any components supported only in the newer version.",
            "Options": { 
                "A": "You won't be able to deploy from sandbox to production until the production org has been upgraded to the same API version",
                "B": "You can opt out of the Salesforce release",
                "C": "You can use Change Sets, which bypass version limitations",
                "D": "You can change the API version number in the package.xml file to the same as the production organization, and then no new features will be included in the deployment"
            },
            "Answers": ["D"],
            "Reorder": true 
        },
        { 
            "Question": "Which tool doesn't require a local file system for deploying metadata?",
            "Options": { 
                "A": "Force.com IDE",
                "B": "Workbench",
                "C": "Change Sets",
                "D": "Force.com Migration Tool"
            },
            "Answers": ["C"],
            "Reorder": true 
        },
        { 
            "Question": "What is the recommended tool for scriptable deployments to sandbox and Developer Edition orgs?",
            "Options": { 
                "A": "Force.com Migration Tool",
                "B": "Force.com IDE",
                "C": "Change Sets",
                "D": "All of the above"
            },
            "Answers": ["A"],
            "Reorder": true 
        },
        { 
            "Question": "Managed packages can be used in which scenarios?",
            "Options": { 
                "A": "For a one-time setup.",
                "B": "For non-namespaced orgs.",
                "C": "For customizations that are upgradeable and that you distribute to multiple orgs.",
                "D": "For customizations that are not upgradeable."
            },
            "Answers": ["C"],
            "Reorder": true 
        },
        { 
            "Question": "How are metadata components specified in package.xml?",
            "Options": { 
                "A": "Each component is specified in the <name> tag.",
                "B": "Each component is a JSON file.",
                "C": "Each component is specified in the <component> tag.",
                "D": "Each component is specified in the <members> tag and its type is in the <name> tag."
            },
            "Answers": ["D"],
            "Reorder": true 
        },
        { 
            "Question": "How do you delete metadata components from an org?",
            "Options": { 
                "A": "Use change sets to delete a component.",
                "B": "Perform a deployment using a delete manifest file named destructiveChanges.xml.",
                "C": "Perform a deployment using package.xml and specify components with empty bodies.",
                "D": "You can't delete components.",
                "E": "Very very carefully. Only with supervision from a certified technical architect."
            },
            "Answers": ["B"],
            "Reorder": true 
        },
        { 
            "Question": "The Deployment Status page shows the status and test results of what type of deployments?",
            "Options": { 
                "A": "All deployments including change sets.",
                "B": "Change sets only.",
                "C": "Deployments started from the Force.com Migration Tool and change sets.",
                "D": "Metadata API deployments."
            },
            "Answers": ["A"],
            "Reorder": true 
        },
        { 
            "Question": "What is the benefit of reducing test execution times in a deployment? Choose the best answer.",
            "Options": { 
                "A": "Shorter deployments provide better experience with the software development lifecycle and have a reduced risk of being interrupted by service updates.",
                "B": "Shorter deployments make iterative test deployments faster.",
                "C": "Shorter deployments make iterative test deployments longer because they require more frequent deployments.",
                "D": "Deployment times are outside of my control. Only Astro has the power to change the deployment time."
            },
            "Answers": ["A"],
            "Reorder": true 
        },
        { 
            "Question": "How does a quick deployment reduce deployment time to production?",
            "Options": {
                "A": "Because tests have run successfully before in a validation, tests aren't run in a quick deployment. The absence of a test run reduces deployment time.",
                "B": "Quick deployment uses a new deployment engine that is more efficient than regular deployments.",
                "C": "Tests aren't rerun in a quick deployment because they are resumed.",
                "D": "B and C"
            },
            "Answers": ["A"],
            "Reorder": false
        },
        { 
            "Question": "What is the benefit of test levels? Choose the best answer.",
            "Options": { 
                "A": "Test levels reduce the time of iterative test deployments.",
                "B": "Test levels reduce the time of iterative test deployments and give you the flexibility to decide how much testing to perform.",
                "C": "Test levels are only useful in production but not in test environments.",
                "D": "Test levels are useful only if you use the Run Specified Tests level."
            },
            "Answers": ["B"],
            "Reorder": true 
        },
        { 
            "Question": "Suppose you're deploying a small app that doesn't depend on components in your org. This app has one Apex test class that covers the Apex code in your app. What is the best practice for a fast production deployment?",
            "Options": 
            {
                "A": "Run a deployment with the Run All Tests test level. It's better to always run all tests to ensure that nothing breaks in production.",
                "B": "First run a validation that uses Run Specified Tests to run the test class, followed by a quick deployment.",
                "C": "Run a deployment with no test level set so that the default test behavior occurs.",
                "D": "Run a deployment with the Run Specified Tests level and specify the test class."
            },
            "Answers": ["B"],
            "Reorder": true 
        },
        {
            "Question": "If one of your deployments is interrupted due to a Salesforce service update, what happens?",
            "Options": { 
                "A": "The deployment is canceled and needs to be manually restarted.",
                "B": "The deployment is restarted, and all tests need to be rerun.",
                "C": "Tests in the deployment are resumed after the last executed test whose result is saved.",
                "D": "Tests in the deployment are resumed from where they last stopped. Previous results aren't saved."
            },
            "Answers": ["C"],
            "Reorder": true 
        },
        { 
            "Question": "When is it advisable to use version control?",
            "Options": { 
                "A": "When you don't have a sandbox or when performing large-scale development.",
                "B": "When using change sets",
                "C": "If you have one developer",
                "D": "If you can't find where the audit trail is stored"
            },
            "Answers": ["A"],
            "Reorder": true 
        },
        { 
            "Question": "Not all metadata is represented in the Metadata API. This means that:",
            "Options": { 
                "A": "Your source control system must have a means of storing non-XML data",
                "B": "Any functionality you create in sandbox that isn't represented in the Metadata API, will need to manually re-created in every other environment",
                "C": "Developer Pro sandboxes contain all of your data",
                "D": "All of the above"
            },
            "Answers": ["B"],
            "Reorder": true 
        },
        { 
            "Question": "A continuous integration system allows you to:",
            "Options": { 
                "A": "Automate the creation of Change Sets",
                "B": "Automatically create a source control repository",
                "C": "Automate deployments and tests from source control to sandbox",
                "D": "Meet an actual guy named Jenkins"
            },
            "Answers": ["C"],
            "Reorder": true 
        },
        { 
            "Question": "Which of the following customizations is safe to create in your production org?",
            "Options": { 
                "A": "Add a master-detail relationship.",
                "B": "Add a dashboard.",
                "C": "Delete a custom object.",
                "D": "Change a field type from text to numbers."
            },
            "Answers": ["B"],
            "Reorder": true 
        },
        { 
            "Question": "If you deploy a workflow rule in production before testing it in a separate environment, which of the following can happen?",
            "Options": { 
                "A": "Your rule could update records incorrectly.",
                "B": "Your rule might not work as intended.",
                "C": "Your rule could send unintended emails or create unnecessary tasks.",
                "D": "All of the above"
            },
            "Answers": ["D"],
            "Reorder": true 
        },
        { 
            "Question": "What's the correct order for the three main stages of a good change management system?",
            "Options": { 
                "A": "Test, build, and deploy",
                "B": "Deploy, test, and build",
                "C": "Deploy, build, and test",
                "D": "Build, test, and deploy"
            },
            "Answers": ["D"],
            "Reorder": true 
        },
        { 
            "Question": "You're working in an Unlimited Edition org where changes are made in production. Which of the following reasons makes the best case for using a sandbox?",
            "Options": { 
                "A": "You can protect your data by building and testing in a separate environment.",
                "B": "It's faster than coding in production.",
                "C": "You can build castles.",
                "D": "B and C."
            },
            "Answers": ["A"],
            "Reorder": false 
        },
        { 
            "Question": "Which of the following isn't a benefit of using change sets?",
            "Options": { 
                "A": "The target org can choose when to deploy the received change set.",
                "B": "Point-and-click deployment is easier to use than the API or other tools.",
                "C": "You can transfer user licenses from sandbox to production.",
                "D": "A and B."
            },
            "Answers": ["C"],
            "Reorder": false 
        },
        { 
            "Question": "What kind of sandbox is best for final staging before production?",
            "Options": { 
                "A": "Developer",
                "B": "Developer Pro",
                "C": "Partial Copy",
                "D": "Full"
            },
            "Answers": ["D"],
            "Reorder": true 
        },
        { 
            "Question": "Which is the best way to discover how many sandboxes are available for your org?",
            "Options": { 
                "A": "In your production org, search for 'Sandbox' in Setup.",
                "B": "In your sandbox, search for 'Sandbox' in Setup.",
                "C": "Call Salesforce Customer Support.",
                "D": "Review your service agreement."
            },
            "Answers": ["A"],
            "Reorder": true 
        },
        { 
            "Question": "How do you create a sandbox?",
            "Options": { 
                "A": "Call Salesforce Customer Support",
                "B": "From the Sandboxes page in the Setup menu",
                "C": "Expose the Sandbox tab in Customize My Tabs",
                "D": "From the Home tab"
            },
            "Answers": ["B"],
            "Reorder": true 
        },
        { 
            "Question": "What do you do to ensure that sensitive data isn't copied to your Full Copy sandbox?",
            "Options": { 
                "A": "Create a sandbox data template and then specify it when creating the sandbox.",
                "B": "Delete all sensitive data as soon as it's in the sandbox by using a data template.",
                "C": "Rely on sharing and permission rules to protect sensitive data in a sandbox.",
                "D": "A and B"
            },
            "Answers": ["A"],
            "Reorder": false 
        },
        { 
            "Question": "Which of the following isn't a benefit of using change sets?",
            "Options": { 
                "A": "Creating a change set helps you identify missing components.",
                "B": "Validating a change set auto-corrects errors.",
                "C": "You can use the change set more than once, saving time if you have many iterations or a large set of changes.",
                "D": "You can validate your change set before deploying."
            },
            "Answers": ["B"],
            "Reorder": true 
        },
        { 
            "Question": "Deploying changes from sandbox to production using change sets is a four-step process. Which of the following isn't one of the steps?",
            "Options": { 
                "A": "Authorize deployment connections in production.",
                "B": "Create an outbound change set in sandbox.",
                "C": "Upload the change set from sandbox to production.",
                "D": "Delete a deployed change set."
            },
            "Answers": ["D"],
            "Reorder": true 
        },
        { 
            "Question": "What is the benefit of validating an inbound change set before deploying? Choose the best answer.",
            "Options": { 
                "A": "Receiving change sets in advance and then deploying at your convenience",
                "B": "Obtaining test results of the deployment without committing changes",
                "C": "Automatically adding missing components during validation",
                "D": "B and C"
            },
            "Answers": ["B"],
            "Reorder": false 
        },
        { 
            "Question": "Which of the following isn't a component of a governance framework?",
            "Options": { 
                "A": "Agile Methodology",
                "B": "Design Standards",
                "C": "Release Management",
                "D": "Center of Excellence"
            },
            "Answers": ["A"],
            "Reorder": true 
        },
        { 
            "Question": "How does a center of excellence improve velocity?",
            "Options": { 
                "A": "Ignores user input to focus on internal goals.",
                "B": "Channels all changes through IT.",
                "C": "Helps everyone understand the business priorities.",
                "D": "Keeps best practices on a need-to-know basis."
            },
            "Answers": ["C"],
            "Reorder": true 
        },
        { 
            "Question": "Which of the following is an example of a design standard that applies to Salesforce?",
            "Options": { 
                "A": "Consistently using the Description field",
                "B": "Enabling SAML",
                "C": "Editing a page layout",
                "D": "B and C"
            },
            "Answers": ["A"],
            "Reorder": false     
        }
    ]
}